name: Cross-Release

# on events
on:
  release:
    types: 
        - created

jobs:
  build_mips:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - target: "mips-unknown-linux-gnu"
            image_tag: "linux-mips"
            container_name: "mips-release"
          - target: "mipsel-unknown-linux-gnu"
            image_tag: "linux-mipsel-lts"
            container_name: "mipsel-release"
          - target: "armv5-unknown-linux-gnueabi"
            image_tag: "linux-armv5"
            container_name: "linux-armv5-release"
          - target: "armv6-unknown-linux-gnueabihf"
            image_tag: "linux-armv6"
            container_name: "linux-armv6-release"
          - target: "armv7-unknown-linux-gnueabi"
            image_tag: "linux-armv7"
            container_name: "linux-armv7-release" 
    steps:
    - uses: actions/checkout@v3
    - name: MIPS Little Endian x32
      run: |
          docker build . --build-arg ARCH=${{ matrix.platform.image_tag }} --build-arg HOST=${{ matrix.platform.target }} --no-cache -t ${{ matrix.platform.target }} --file Dockerfile
          docker run --name ${{ matrix.platform.container_name }} ${{ matrix.platform.target }} 
          #docker ps -a
          docker cp ${{ matrix.platform.container_name }}:/work/${{ matrix.platform.target }} .
    - name: Upload binary artifacts
      uses: actions/upload-artifact@v3
      with:
          name: ${{ matrix.platform.target }}-bin
          path: ./${{ matrix.platform.target }}/
          if-no-files-found: error
    - name: Archive binary
      if: "startsWith(github.ref, 'refs/tags/')"
      run: |
        cd ./${{ matrix.platform.target }}
        tar -czvf ../${{ matrix.platform.target }}-bin.tar.gz -C ./ .
        cd -
    - name: Upload binary to GitHub Release
      uses: softprops/action-gh-release@v1
      if: "startsWith(github.ref, 'refs/tags/')"
      with:
        files: ./${{ matrix.platform.target }}-bin.tar.gz
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
        generate_release_notes: true

